source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_4/problem3_4.R', echo=TRUE)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_4/problem3_4.R', echo=TRUE)
x <- rawData[, 1:4]
x
s <- cov(x)
s
es <- eigen(s)
es
x
plot(x[,1], x[,2])
mean(x)
colmean(x)
colMeans(x)
mid <- scale(x, center=TRUE, scale=FALSE)
plot(mid[1], mid[2])
plot(mid[,1], mid[,2])
plot(x[,1], x[,2])
es
es
rot <- es * mid
rot <- mid * es
mid
mid[1]
View(mid)
mid * es
es
es[2]
mid * es[2]
mid
mid[1]
es$values
mid * es$vectors
es$vectors * mid
size(es$vectors)
es$vectors
mid
es$vectors * mid
size(mid)
dims(mid)
dim(mid)
dim(es$vectors)
mid * es$vectors
mid %*% es%vectors
mid %*% es$vectors
es$vectors %*% mid
rotated <- mid %*% es$vectors
plot(rotated[1], rotated[2])
plot(rotated[,1], rotated[,2])
plot(rotated[,1], rotated[,2], asp=1)
pComp
pComp$sdev
pComp$loadings
colmeans(pComp$loadings)
colMeans(pComp$loadings)
abs(pComp$loadings)
pca <- prcomp(rawData[, 1:4])
pca$rotation
center
mid
mid %*% pca$rotation
newRot <- mid %*% pca$rotation
plot(newRot[1], newRot[2], asp=1)
plot(newRot[, 1], newRot[, 2], asp=1)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_4/problem3_4.R', echo=TRUE)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_4/problem3_4.R', echo=TRUE)
results
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_4/problem3_4.R', echo=TRUE)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
rawData <- read.csv('data/data.txt', header=FALSE)
dim(rawData)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
cleanData[, 10] <- benign
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
test <- sample(cleanData, 100)
sample(nrow(cleanData), 100)
sample(nrow(cleanData), c(100,100,369)
asdf
sample(nrow(cleanData), c(100,100,369))
x <- sample(nrow(cleanData), c(100,100,369))
sample(1:10, 4, replace = FALSE, prob = NULL)
rm(list=ls())
library('lattice')
library('chemometrics')
library('karet')
setwd('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/')
rawData <- read.csv('data/data.txt', header=FALSE)
cleanData <- cbind(rawData[,2:11], rawData[,11] == 2) #get rid of ID's, change benign to T or F
#Split data
split <- sample(nrow(cleanData), 100, replace=FALSE)
val <- cleanData[split]
remain <- cleanData[-split]
split <- sample(nrow(remain), 100, replace=FALSE)
test <- remain[split]
train <- remain[-split]
rawData <- read.csv('data/data.txt', header=FALSE)
cleanData <- cbind(rawData[,2:11], rawData[,11] == 2) #get rid of ID's, change benign to T or F
#Split data
split <- sample(nrow(cleanData), 100, replace=FALSE)
val <- cleanData[, split]
remain <- cleanData[, -split]
split <- sample(nrow(remain), 100, replace=FALSE)
test <- remain[, split]
train <- remain[, -split]
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
val <- cleanData[, split]
dims(cleanData)
dim(cleanData)
split <- sample(nrow(cleanData), 100, replace=FALSE)
val <- cleanData[split, ]
remain <- cleanData[-split, ]
split <- sample(nrow(remain), 100, replace=FALSE)
test <- remain[split, ]
train <- remain[-split, ]
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
cleanData[, 1:10]
rawData <- read.csv('data/wdbc.data.txt', header=FALSE)
cleanData <- cbind(rawData[,3:12], rawData[,2] == B) #get rid of ID's, change benign to T or F
cleanData <- cbind(rawData[,3:32], rawData[,2] == B) #get rid of ID's, change benign to T or F
cleanData <- cbind(rawData[,3:32], rawData[,2] == "B") #get rid of ID's, change benign to T or F
dim(rawData)
dim(rawData[,3:32])
dim(rawData[,2] == "B")
length(rawData[,2] == "B")
rawData <- read.csv('data/wdbc.data.txt', header=FALSE)
cleanData <- cbind(rawData[,3:32], rawData[,2] == "B") #get rid of ID's, change benign to T or F
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
scatterplot3d(rotate[,1], rotate[,2], rotate[,3], col=colr[cleanData[,31]])
install.packages('scatterplot3d')
library('scatterplot3d')
scatterplot3d(rotate[,1], rotate[,2], rotate[,3], col=colr[cleanData[,31]])
scatterplot3d(rotate[,1], rotate[,2], rotate[,3], color=colr[cleanData[,31]])
length(rotate[,1])
length(colr[cleanData[,31]])
length(cleanData[,1])
length(cleanData[,31])
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
length(cleanData[,31])
length(cleanData[,1])
x <- colr[cleanData[, 31]]
x
source('C:/Users/Michael/workspaces/CS498/HW4/Problem3_7/problem3_7.R', echo=TRUE)
